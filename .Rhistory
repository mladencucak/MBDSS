) %>% bind_rows( d_sum, .)
d_sum <-  mutate(d_sum,
cutoff ="spor_start",
date = dates[1]
) %>% bind_rows(d_sum, .)
d_sum <-
d_sum %>%
mutate( spor_start_prop = ifelse(leap_year(year(date)),
yday(date) / (366 / 2),
yday(date) / (365 / 2))
)
wthf$spore_start <- dates[1]
wthf$spore_end <- dates[length(dates)]
wthf$sporulated <- "yes"
} else{
# Was there sporulation
d_sum <- add_column(d_sum, sporulated = "no", .after = "id")
( d_sum <- add_column(d_sum, spor_dur = 0, .after = "sporulated"))
d_sum <-  mutate(d_sum[1,],
cutoff ="spor_end",
date = as.Date(paste(dat_sum[i , "yr"] %>% pull(), "03", "15", sep = "-"))
) %>% bind_rows( d_sum, .)
d_sum <-  mutate(d_sum,
cutoff ="spor_start",
date = as.Date(paste(dat_sum[i , "yr"] %>% pull(), "03", "15", sep = "-"))
) %>% bind_rows(d_sum, .)
d_sum <-
d_sum %>%
mutate( spor_start_prop = ifelse(leap_year(year(date)),
yday(date) / (366 / 2),
yday(date) / (365 / 2))
)
wthf$spore_start <- as.Date(paste(dat_sum[i , "yr"] %>% pull(), "03", "15", sep = "-"))
wthf$spore_end <- as.Date(paste(dat_sum[i , "yr"] %>% pull(), "03", "15", sep = "-"))
wthf$sporulated <- "no"
}
d_sum$cutoff <- factor(d_sum$cutoff, levels = c("germ_start","spor_start", "spor_end" ))
d_sum <- distinct(d_sum)
(  dis_sub <-
dis_sub %>%
group_by(stage) %>%
mutate(count_cum =cumsum(counts)))
# dab - days after (chill hour) biofix
lsdab <- split(wthf, wthf$date)
for(z in seq(lsdab)) lsdab[[z]]$dab <- z
wthf <- bind_rows(lsdab)
############################
### Units
#############################
wthf <-
wthf %>%
mutate(
# Chilling units
cu_ = ifelse(temp > 0 & temp < 7.2, 1, 0),
)
#Join apothecia development data
wthf <-
pivot_wider(dis_long, id_cols = c("id", "date"),
names_from =c( "stage"),
values_from = "counts") %>%
filter(id ==  unique( wthf$id)) %>%
left_join(wthf, ., by = c("id", "date"))
# Define variable  containing all model names
(levels_chill <-
select(wthf,
c(starts_with("cu_"),
)) %>% colnames())
# calculate daily values
system.time(
wthd <-
split(wthf, wthf$date, drop = TRUE) %>%
lapply(., function(x){
# x <- split(wthf, wthf$date, drop = TRUE)[[1]]
x
y<- data.frame( date= date(x$datetime[1]),
stna =x$stna[1],
id =x$id[1],
sporulated = x$sporulated[1])
y$temp <- mean(x$temp, na.rm = TRUE) %>% round(1)
y$mintemp <- min(x$temp, na.rm = TRUE) %>% round(1)
y$maxtemp <- max(x$temp, na.rm = TRUE) %>% round(1)
y$soilt2in <- mean(x$soilt2in, na.rm = TRUE) %>% round(1)
y$minsoilt2in <- min(x$soilt2in, na.rm = TRUE) %>% round(1)
y$maxsoilt2in <- max(x$soilt2in, na.rm = TRUE) %>% round(1)
y$soilm <- mean(x$soilm, na.rm = TRUE) %>% round(1)
y$minsoilm <- min(x$soilm, na.rm = TRUE) %>% round(1)
y$maxsoilm <- max(x$soilm, na.rm = TRUE) %>% round(1)
y$soilt8in <- mean(x$soilt8in, na.rm = TRUE) %>% round(1)
y$minsoilt8in <- min(x$soilt8in, na.rm = TRUE) %>% round(1)
y$maxsoilt8in <- max(x$soilt8in, na.rm = TRUE, warning=FALSE) %>% round(1)
y$rh <- mean(x$rh, na.rm = TRUE) %>% round(1)
y$minrh <- min(x$rh, na.rm = TRUE) %>% round(1)
y$maxrh <- max(x$rh, na.rm = TRUE, warning=FALSE) %>% round(1)
y$wspd <- mean(x$wspd, na.rm = TRUE) %>% round(1)
y$minwspd <- min(x$wspd, na.rm = TRUE) %>% round(1)
y$maxwspd <- max(x$wspd, na.rm = TRUE, warning=FALSE) %>% round(1)
y$lw <- sum(x$lw, na.rm = TRUE)
y$solrad <- sum(x$solrad, na.rm = TRUE)
y$rain <- sum(x$rain, na.rm = TRUE)
y$dormant <- x$dormant[1]
y$germination <- x$germination[1]
y$emergence <- x$emergence[1]
y$differentiation <- x$differentiation[1]
y$sporulation <- x$sporulation[1]
y$finished <- x$finished[1]
y$frosthr <-
ifelse(any(x$temp<0), length(x$temp[x$temp<0]), 0)# hours temp less than zero
# y$cu <-  sum(x$cu)
# y$cu_zero <-  sum(x$cu_zero)
y$germ_start <- x$germ_start[1]
y$spore_start <- x$spore_start[1]
y$spore_end <- x$spore_end[1]
y <-
bind_cols(y,
select(x, all_of(levels_chill)) %>%
summarise_all(sum, na.rm = T))
return(y)
}) %>% bind_rows()
)
#Clean up NaN and Inf
is.na(wthd) <- sapply(wthd, is.infinite)
(wthd <- replace(wthd,is.na(wthd) , NA ))
# rolling mean
rlmean <- 10
wthd[, paste("wtemp", rlmean, sep = "_")]  <-
zoo::rollmean(wthd$temp, rlmean, mean, align = 'right', fill = NA)
wthd[, paste("wmintemp", rlmean, sep = "_")]  <-
zoo::rollmean(wthd$mintemp, rlmean, mean, align = 'left', fill = NA)
wthd[, paste("wmaxtemp", rlmean, sep = "_")]  <-
zoo::rollmean(wthd$maxtemp, rlmean, mean, align = 'left', fill = NA)
# # Calculate Chill accumulations on different CHILL cutoff days
chill_biofix <-
c(
paste("11", "01", sep = "-"),
paste("11", "15", sep = "-"),
paste("12", "01", sep = "-"),
paste("12", "15", sep = "-"),
paste("01", "01", sep = "-")
)
(  chill_dates <-
c(as.Date(paste(wthf$season[1]-1, chill_biofix[1:4], sep = "-")),
as.Date(paste(wthf$season[1], chill_biofix[5], sep = "-"))))
chill_lss <- list()
for (z in seq_along(chill_dates)) {
chill <- chill_dates[[z]]
chill_end <- d_sum[d_sum$cutoff == "spor_start", "date"] %>% unique() %>% pull()
chill_lss[[z]] <-
wthd %>%
filter(date >= chill) %>%
filter(date <= chill_end) %>%
mutate(chill = chill) %>%
mutate(across(starts_with("cu_"),  cumsum)) %>%
select(starts_with("cu_")) %>%
filter(row_number()==n()) %>%
bind_cols(d_sum[ d_sum$cutoff == "spor_start", ],.) %>%
add_column( chill_start = chill_biofix[z], .before = 1)
}
#chill units assessment
ch_ls[[i]] <-
bind_rows(chill_lss) %>%
mutate(chill_start = factor(chill_start, levels = chill_biofix))
# Calculate the area under the curve for sporulation
aucdf <- dis_sub
aucdf <-
aucdf[aucdf$stage == "sporulation", ] %>%
mutate(times = yday(date) - min(yday(date)))
ch_ls[[i]]["spor_int"] <-  sum(diff(aucdf$times)*zoo::rollmean(aucdf$prop,2))
wth_ls[[i]] <- wthf
wthd_ls[[i]] <- wthd
dis_ls[[i]] <- dis_sub
rm(wthf, dis_sub,lsdab, dff, loc, dates)
print(i)
}
save(ch_ls, file = here("dat/ana/chill.RData"))
save(wthd_ls, file = here("dat/ana/wthd_ls.RData"))
wthd_ls
linesize <- .35 #size of the line for variables
wthd_ls %>% bind_rows() %>%
mutate(rain = ifelse(rain == 0, NA, rain)) %>%
ggplot() +
geom_point(aes(germ_start, 46, shape = sporulated), size = 1.5)+
geom_point(aes(spore_start, 46),shape =2, size = 1.5)+
geom_point(aes(spore_end, 46),shape =2, size = 1.5)+
# geom_point(aes(date, condday), shape = 3,size = .55)+
geom_line(
aes(
x = date,
y = rh,
colour = "Relative humidity (%)"
),
size = linesize
) +
geom_line(aes(
x = date,
y = temp,
colour = "Temperature (˚C)",
),
size = linesize) +
geom_line(aes(
x = date,
y = wtemp_10 ,
colour = "Rolling mean temp. (˚C)"
),
linetype = "dashed",
size = linesize) +
geom_col(
aes(date,
rain,
fill = "Total precipitation (mm/day)"),
size = 1.2 ,
inherit.aes = TRUE,
width = 0.8
) +
scale_colour_manual(
"Daily weather:",
values = c(
"Relative humidity (%)" = "#0EBFE9",
"Temperature (˚C)" = "#ED2939",
"Rolling mean temp. (˚C)"= "darkred"
)
) +
scale_fill_manual(name= NA, values = c("Total precipitation (mm/day)" = "blue")
) +
scale_y_continuous( breaks = seq(0,100,10), limits = c(-1,100),expand = c(0, 0))+
scale_x_date(date_labels = "%b", date_breaks = "1 month",expand = c(.03, .04))+
facet_wrap( ~ id, scales = "free", ncol = 1,strip.position="right") +
guides(fill=guide_legend(nrow=1,byrow=TRUE,title.position = "top"),
color=guide_legend(nrow=1,byrow=TRUE,title.position = "top"),
linetype=guide_legend(nrow=1,byrow=TRUE,title.position = "top"))+
theme_bw()+
theme(
text = element_text(size=10.8),
# axis.text.x = element_blank(),
# axis.ticks.x = element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_blank(),
# axis.text.y = element_blank(),
# axis.ticks.y = element_blank(),
legend.position = "top",
strip.background =element_rect(colour = "black",size=0.75),
strip.placement = "outside",
legend.title = element_blank(),
panel.grid.minor =   element_blank(),
panel.grid.major =   element_line(colour = "lightgray",size=linesize),
plot.margin = margin(0, 0, 0, 0, "cm"),
panel.spacing.y=unit(0, "lines"),
legend.box.spacing = unit(0.1, 'cm'),
legend.margin = margin(0, 0, 0, 0, "cm"),
)
linesize <- .45 #size of the line for variables
top <- 30
apodot <- 3
apodot_pos <- -6
ReLab <- function(flab ,fvar ){
paste(flab,
substring(fvar, 6, 10))
}
lab_date_g <- 3
lab_date <- 3.7
# Extract additional data for pathogen development
summary <-
dis_long %>%
group_by(id) %>%
summarise(
first_out = min(date),
last_out = max(date)
)
summary <-
dis_long %>%
filter(stage %in% "germination") %>%
group_by(id) %>%
mutate(counts_cum = cumsum(counts)) %>%
filter(counts_cum == max(counts_cum)) %>%
filter(row_number()==1) %>%
select(id, date) %>%
rename(germ_end = date) %>%
left_join(summary, ., by = "id")
(pl <-
wthd_ls %>% bind_rows() %>%
separate(id, c("loc", "yr"), remove = FALSE) %>%
mutate(across(sporulation,~ ifelse(dplyr::lag(.) == 0 & . == 0 & lead(.) == 0, NA, .))) %>%
mutate(sporulation = ifelse(date< spore_start, NA, sporulation)) %>%
mutate(rain = ifelse(rain == 0, NA, rain)) %>%
mutate(rain = ifelse(rain >top, top, rain)) %>%
mutate(mon = month(date),
yr = factor(year(date),
levels = seq(min(year(date)), max(year(date)))),
frosthr = as.numeric(frosthr),
frost = ifelse(frosthr >0, top-9, NA),
spore_start = ifelse(sporulated == "yes", spore_start, NA) %>% as_date(),
spore_end = ifelse(sporulated == "yes", spore_end, NA)%>% as_date()
) %>%
left_join(., summary, by = "id") %>%
distinct() %>%
dplyr::filter(mon < 5) %>%
ggplot() +
# Germination and sporulation areas
geom_rect(aes(xmin = germ_start, xmax = germ_end, ymin = -Inf, ymax = Inf),
fill=gray.colors(12)[12], alpha = 0.9)+
geom_rect(aes(xmin = spore_start, xmax = spore_end, ymin = -Inf, ymax = Inf),
fill=gray.colors(12)[10], alpha = 0.9)+
geom_vline(aes(xintercept = germ_start), color = "black", size  = .2)+
geom_vline(aes(xintercept = spore_start), color = "black", size  = .2)+
geom_vline(aes(xintercept = spore_end), color = "black", size  = .2)+
geom_vline(aes(xintercept = last_out), color = "black", size  = .4, linetype = "dotted")+
# Boost the zero line
geom_hline(aes(yintercept = 0), color =gray.colors(12)[4] )+
# Environmental variables
geom_line(aes( x = date, y = temp,colour = "Mean daily temp. (˚C)"),
size = linesize) +
geom_line(aes(x = date, y = wmintemp_10,colour = "10-day rolling mean daily min. temp.(˚C)(dot-dash)"),
size = linesize, linetype = "twodash") +
geom_col(aes(date,rain,fill = "Total daily precipitation (mm/day)"),
size = .9 ,inherit.aes = TRUE, width = 0.4) +
# Negative temperatures
geom_point(aes(date, frost, group = frosthr, size = frosthr), shape = 20)+
# Labels for germination and sporulation dates
geom_text(aes(germ_start - lab_date_g, apodot_pos, label = ReLab( "G",germ_start)), size = apodot)+
geom_text(aes(spore_start - lab_date, apodot_pos,
label = ReLab(  ifelse(spore_start == spore_end, "AS-E", "AS"),spore_start)),size = apodot)+
geom_text(aes(spore_end + lab_date, apodot_pos,
label = ifelse(spore_start == spore_end, NA, ReLab( "AS", spore_end))),size = apodot)+
# Sporulation percentages
geom_point(aes(date, ifelse(sporulation > top, top-6, sporulation) ,
group = sporulation, colour = "Sporulating apothecia"), shape =17, size = 2, alpha = .8) +
geom_text(aes(date-1, top-3,
label =ifelse(!is.na(sporulation), paste0(sporulation, "%"), NA),
colour = "Apothecia percentage"
),size = apodot)+
#Theme and colors
scale_colour_manual(
"Daily weather:",
values = c(
"Mean daily temp. (˚C)" = "#ED2939",
"10-day rolling mean daily min. temp.(˚C)(dot-dash)" = "darkred",
"Sporulating apothecia" = "darkgreen"
)
) +
scale_fill_manual(name= NA, values = c("Total daily precipitation (mm/day)" = "blue")
) +
scale_y_continuous( breaks = seq(-10,top,10), limits = c(-10,top),expand = c(0, 0))+
scale_x_date(date_labels = "%b", date_breaks = "1 month",expand = c(.03, .04))+
guides(fill=guide_legend(nrow=1,byrow=F,title.position = "top"),
color=guide_legend(nrow=2,byrow=F,title.position = "top"),
linetype=guide_legend(nrow=1,byrow=T,title.position = "top"))+
theme_bw()+
theme(
text = element_text(size=10.8),
# axis.text.x = element_blank(),
# axis.ticks.x = element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_blank(),
# axis.text.y = element_blank(),
# axis.ticks.y = element_blank(),
legend.position = "top",
strip.background =element_rect(colour = "black",size=0.75),
strip.placement = "outside",
legend.title = element_blank(),
panel.grid.minor =   element_blank(),
panel.grid.major =   element_line(colour = "lightgray",size=linesize),
plot.margin = margin(0, 0, 0, 0, "cm"),
panel.spacing.y=unit(0, "lines"),
legend.box.spacing = unit(0.1, 'cm'),
legend.margin = margin(0, 0, 0, 0, "cm"),
)+
facet_wrap(yr ~ loc, scales = "free", ncol = 1,strip.position="right")
)
pl+
facet_wrap(yr ~ loc, scales = "free", ncol = 1,strip.position="right")
linesize <- .45 #size of the line for variables
top <- 30
apodot <- 3
apodot_pos <- -6
ReLab <- function(flab ,fvar ){
paste(flab,
substring(fvar, 6, 10))
}
lab_date_g <- 3
lab_date <- 3.7
dt <-
wthd_ls %>% bind_rows() %>% select(spore_start) %>%pull()
substring(dt[1], 6, 10)
max(wthd_ls %>% bind_rows() %>% select(sporulation), na.rm = T)
wthd_ls %>% bind_rows() %>%
mutate(across(sporulation,~ ifelse(dplyr::lag(.) == 0 & . == 0 & lead(.) == 0, NA, .)))
wthd_ls %>% bind_rows() %>%
separate(id, c("loc", "yr")) %>%
filter(yr == 2021) %>%
mutate(mon = month(date),
wminst = zoo::rollmean(minsoilt2in , rlmean, mean,  fill = NA)) %>%
filter(mon== 3) %>%
select(wminst )
rlmean <- 5
(#pl <-
wthd_ls %>% bind_rows() %>%
separate(id, c("loc", "yr")) %>%
mutate(rain = ifelse(rain == 0, NA, rain)) %>%
mutate(rain = ifelse(rain >top, top, rain)) %>%
mutate(mon = month(date),
yr = as.numeric(yr),
frosthr = as.numeric(frosthr),
frost = ifelse(frosthr >0, top-9, NA),
spore_start = ifelse(sporulated == "yes", spore_start, NA) %>% as_date(),
spore_end = ifelse(sporulated == "yes", spore_end, NA)%>% as_date(),
wst = zoo::rollmean(soilt2in , rlmean, mean, align = 'right', fill = NA),
wminst = zoo::rollmean(minsoilt2in , rlmean, mean, align = 'right', fill = NA),
wst = ifelse(wst < (-10), (-10), wst),
wminst = ifelse(wminst < (-10), (-10), wminst),
mng = ifelse(loc == "Whatcom", "low",
ifelse(loc == "Skagit"& yr <= 2017, "low", "high"))
) %>%
group_by(yr, date) %>%
mutate(rain = mean(rain),
temp = mean(temp),
) %>%
distinct() %>%
dplyr::filter(mon < 5) %>%
ggplot() +
# Germination and sporulation areas
# geom_rect(aes(xmin = germ_start, xmax = spore_end, ymin = -Inf, ymax = Inf),
#           fill=gray.colors(12)[12], alpha = 0.9)+
# geom_rect(aes(xmin = spore_start, xmax = spore_end, ymin = -Inf, ymax = Inf),
#           fill=gray.colors(12)[10], alpha = 0.9)+
# geom_vline(aes(xintercept = germ_start), color = "black", size  = .2)+
geom_vline(aes(xintercept = spore_start, color = mng), size  = .2)+
# geom_vline(aes(xintercept = spore_end), color = "black", size  = .2)+
# Boost the zero line
geom_hline(aes(yintercept = 0), color =gray.colors(12)[4] )+
# Environmental variables
geom_line(aes( x = date, y = soilt2in,colour = "Mean daily temp. (˚C)"),
size = linesize) +
geom_line(aes(x = date, y = wminst,colour = "Rolling mean 10-day min. daily temp. (˚C)"),
size = linesize) +
geom_col(aes(date,rain,fill = "Total daily precipitation (mm/day)"),
size = .9 ,inherit.aes = TRUE, width = 0.4) +
# Negative temperatures
# geom_point(aes(date, frost, group = frosthr, size = frosthr), shape = 20)+
# Labels for germination and sporulation dates
# geom_text(aes(germ_start - lab_date_g, apodot_pos, label = ReLab( "G",germ_start)), size = apodot)+
# geom_text(aes(spore_start - lab_date, apodot_pos,
#               label = ReLab(  ifelse(spore_start == spore_end, "AS-E", "AS"),spore_start)),size = apodot)+
# geom_text(aes(spore_end + lab_date, apodot_pos,
#               label = ifelse(spore_start == spore_end, NA, ReLab( "AS", spore_end))),size = apodot)+
# Sporulation percentages
# geom_point(aes(date, ifelse(sporulation > top, top-6, sporulation) ,
#                group = sporulation, colour = "Apothecia percentage"), shape =17, size = 2, alpha = .8) +
# geom_text(aes(date-1, top-3,
#               label =ifelse(!is.na(sporulation), paste0(sporulation, "%"), NA),
#               colour = "Apothecia percentage"
# ),size = apodot)+
#Theme and colors
scale_colour_manual(
"Daily weather:",
values = c(
"Mean daily temp. (˚C)" = "#ED2939",
"Rolling mean 10-day min. daily temp. (˚C)" = "darkred",
"Apothecia percentage" = "darkgreen"
)
) +
scale_fill_manual(name= NA, values = c("Total daily precipitation (mm/day)" = "blue")
) +
scale_y_continuous( breaks = seq(-10,top,10), limits = c(-10,top),expand = c(0, 0))+
scale_x_date(date_labels = "%b", date_breaks = "1 month",expand = c(.03, .04))+
guides(fill=guide_legend(nrow=1,byrow=F,title.position = "top"),
color=guide_legend(nrow=1,byrow=F,title.position = "top"),
linetype=guide_legend(nrow=2,byrow=F,title.position = "top"))+
theme_bw()+
theme(
text = element_text(size=10.8),
# axis.text.x = element_blank(),
# axis.ticks.x = element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_blank(),
# axis.text.y = element_blank(),
# axis.ticks.y = element_blank(),
legend.position = "top",
strip.background =element_rect(colour = "black",size=0.75),
strip.placement = "outside",
legend.title = element_blank(),
panel.grid.minor =   element_blank(),
panel.grid.major =   element_line(colour = "lightgray",size=linesize),
plot.margin = margin(0, 0, 0, 0, "cm"),
panel.spacing.y=unit(0, "lines"),
legend.box.spacing = unit(0.1, 'cm'),
legend.margin = margin(0, 0, 0, 0, "cm"),
)+
facet_wrap( ~ yr, scales = "free", ncol = 1,strip.position="right")
)
ggsave(filename= here::here("out", "soil_years_init_date.png"),
width = 11, height =17, dpi = 350)
wthd_ls %>% bind_rows() %>%
mutate(rain = ifelse(rain == 0, NA, rain)) %>%
mutate(rain = ifelse(rain >top, top, rain)) %>%
mutate(mon = month(date),
yr = factor(year(date),
levels = seq(min(year(date)), max(year(date)))),
frosthr = frosthr,
frost = ifelse(frosthr >0, top-9, NA),
spore_start = ifelse(sporulated == "yes", spore_start, NA) %>% as_date(),
spore_end = ifelse(sporulated == "yes", spore_end, NA)%>% as_date(),
) %>%
mutate(season = year(date)) %>%
separate(id, into = c("loc", "year")) %>%
mutate(rain = ifelse(rain == 0, NA, rain)) %>%
mutate(mon = month(date)) %>%
mutate(rain = ifelse(rain == 0, NA, rain)) %>%
ggplot() +
geom_line(aes(date,cu ))+
geom_point(aes(spore_start, 20),shape =2, size = 1.5, fill ="black")+
geom_point(aes(spore_end, 20),shape =2, size = 1.5, fill ="black")+
geom_rect(aes(xmin =spore_start, xmax=spore_end, ymin=0, ymax=Inf))+
facet_grid(season~loc, scales ="free_x")
