size = 5,
line = list(color = "black",
width = 1)
)
) %>%
add_surface(
x = ~ x.seq,
y = ~ y.seq,
z = t(fit),
opacity = .7
) %>%
layout(title = tit,
scene = list(
xaxis = x,
yaxis = y,
zaxis = z
))
fit
library(plotly)
conflict_prefer("layout", "plotly")
f1 <- list(
family = "Arial, sans-serif",
size = 16,
color = "grey"
)
f2 <- list(
family = "Old Standard TT, serif",
size = 12,
color = "black"
)
tit<- list(
title = "Infection Function",
titlefont = f1,
tickfont = f2
)
x <- list(
title = "Temperature (˚C)",
titlefont = f1,
showticklabels = TRUE,
tickangle = 30,
tickfont = f2,
exponentformat = "E",
nticks= 8,
range= c(min(x.seq), max(x.seq))%>% rev(),
backgroundcolor="white",
gridcolor="black",
showbackground=TRUE,
zerolinecolor="black"
)
y <- list(
title = "Wetness Duration (h)",
titlefont = f1,
showticklabels = TRUE,
tickangle = -45,
tickfont = f2,
exponentformat = "E",
nticks = 8,
range= c(min(y.seq), max(y.seq))%>% rev(),
backgroundcolor="white",
gridcolor="black",
showbackground=TRUE,
zerolinecolor="black"
)
z <- list(
title = "Infection risk (%)",
titlefont = f1,
showticklabels = TRUE,
tickvals = c(0,25,50),
ticktext = c("Huey", "Dewey", "Loormat"),
tickangle = 0,
tickfont = f2,
# exponentf
zerolinecolor="black"
)
# p <-
plot_ly() %>%
add_markers(
x = ~ dis_df$temp,
y = dis_df$wet_dur,
z = dis_df$dis_prop/100,
symbol = 'triangle',
marker = list(
color = ~ dis_df$dis_prop/100,
size = 5,
line = list(color = "black",
width = 1)
)
) %>%
add_surface(
x = ~ x.seq,
y = ~ y.seq,
z = t(fit),
opacity = .7
) %>%
layout(title = tit,
scene = list(
xaxis = x,
yaxis = y,
zaxis = z
))
dis_df$dis_prop/100
z <- list(
title = "Infection risk (%)",
titlefont = f1,
showticklabels = TRUE,
# tickvals = c(0,25,50),
# ticktext = c("Huey", "Dewey", "Loormat"),
tickangle = 0,
tickfont = f2,
# exponentf
zerolinecolor="black"
)
# p <-
plot_ly() %>%
add_markers(
x = ~ dis_df$temp,
y = dis_df$wet_dur,
z = dis_df$dis_prop/100,
symbol = 'triangle',
marker = list(
color = ~ dis_df$dis_prop/100,
size = 5,
line = list(color = "black",
width = 1)
)
) %>%
add_surface(
x = ~ x.seq,
y = ~ y.seq,
z = t(fit),
opacity = .7
) %>%
layout(title = tit,
scene = list(
xaxis = x,
yaxis = y,
zaxis = z
))
dis_df$temp
z <- list(
title = "Infection risk (%)",
titlefont = f1,
showticklabels = TRUE,
# tickvals = c(0,25,50),
# ticktext = c("Huey", "Dewey", "Loormat"),
tickangle = 0,
tickfont = f2,
# exponentf
zerolinecolor="black"
)
# p <-
plot_ly() %>%
add_markers(
x = ~ dis_df$temp,
y = dis_df$wet_dur,
z = dis_df$dis_prop/100,
symbol = 'triangle',
marker = list(
color = ~ dis_df$dis_prop/100,
size = 5,
line = list(color = "black",
width = 1)
)
) %>%
add_surface(
x = ~ x.seq,
y = ~ y.seq,
z = t(fit),
opacity = .7
) %>%
layout(title = tit,
scene = list(
xaxis = x,
yaxis = y,
zaxis = z
))
z
t(fit)
# p <-
plot_ly() %>%
add_markers(
x = ~ dis_df$temp,
y = dis_df$wet_dur,
z = dis_df$dis_prop/100,
symbol = 'triangle',
marker = list(
color = ~ dis_df$dis_prop/100,
size = 5,
line = list(color = "black",
width = 1)
)
) %>%
add_surface(
x = ~ x.seq,
y = ~ y.seq,
z = t(fit/100),
opacity = .7
) %>%
layout(title = tit,
scene = list(
xaxis = x,
yaxis = y,
zaxis = z
))
# p <-
plot_ly() %>%
add_markers(
x = ~ dis_df$temp,
y = dis_df$wet_dur,
z = dis_df$dis_prop/100,
symbol = 'triangle',
marker = list(
color = ~ dis_df$dis_prop/100,
size = 5,
line = list(color = "black",
width = 1)
)
) %>%
add_surface(
x = ~ x.seq,
y = ~ y.seq,
z = t(fit/100),
opacity = .6
) %>%
layout(title = tit,
scene = list(
xaxis = x,
yaxis = y,
zaxis = z
))
paste(seq(0,1, 10))
paste(seq(0,1, 10))
seq(0,1, 10)
seq(0,1, .1)
paste(seq(0,1, .1))
paste(seq(0.1,1, .1))
paste(seq(0.1,1, .1)) %>% length()
z <- list(
title = "Infection risk (%)",
titlefont = f1,
showticklabels = TRUE,
tickvals =seq(0.1,1, .1),
ticktext = paste(seq(10,100, 10)),
tickangle = 0,
tickfont = f2,
# exponentf
zerolinecolor="black"
)
# p <-
plot_ly() %>%
add_markers(
x = ~ dis_df$temp,
y = dis_df$wet_dur,
z = dis_df$dis_prop/100,
symbol = 'triangle',
marker = list(
color = ~ dis_df$dis_prop/100,
size = 5,
line = list(color = "black",
width = 1)
)
) %>%
add_surface(
x = ~ x.seq,
y = ~ y.seq,
z = t(fit/100),
opacity = .6
) %>%
layout(title = tit,
scene = list(
xaxis = x,
yaxis = y,
zaxis = z
))
plotly_IMAGE(p, width = 750, height = 550, format = "png", scale = 2,
out_file = here("scr/model/fig/surface_inf.png"))
p <-
plot_ly() %>%
add_markers(
x = ~ dis_df$temp,
y = dis_df$wet_dur,
z = dis_df$dis_prop/100,
symbol = 'triangle',
marker = list(
color = ~ dis_df$dis_prop/100,
size = 5,
line = list(color = "black",
width = 1)
)
) %>%
add_surface(
x = ~ x.seq,
y = ~ y.seq,
z = t(fit/100),
opacity = .6
) %>%
layout(title = tit,
scene = list(
xaxis = x,
yaxis = y,
zaxis = z
))
plotly_IMAGE(p, width = 750, height = 550, format = "png", scale = 2,
out_file = here("scr/model/fig/surface_inf.png"))
shell.exec(here("scr/model/fig/surface_inf.png"))
z <- list(
title = "Infection risk (%)",
titlefont = f1,
showticklabels = TRUE,
tickvals =seq(0.1,1, .1),
ticktext = paste(seq(10,100, 10)),
tickangle = 0,
tickfont = f2,
range = c(0,1),
# exponentf
zerolinecolor="black"
)
p <-
plot_ly() %>%
add_markers(
x = ~ dis_df$temp,
y = dis_df$wet_dur,
z = dis_df$dis_prop/100,
symbol = 'triangle',
marker = list(
color = ~ dis_df$dis_prop/100,
size = 5,
line = list(color = "black",
width = 1)
)
) %>%
add_surface(
x = ~ x.seq,
y = ~ y.seq,
z = t(fit/100),
opacity = .6
) %>%
layout(title = tit,
scene = list(
xaxis = x,
yaxis = y,
zaxis = z
))
# p <-
plot_ly() %>%
add_markers(
x = ~ dis_df$temp,
y = dis_df$wet_dur,
z = dis_df$dis_prop/100,
symbol = 'triangle',
marker = list(
color = ~ dis_df$dis_prop/100,
size = 5,
line = list(color = "black",
width = 1)
)
) %>%
add_surface(
x = ~ x.seq,
y = ~ y.seq,
z = t(fit/100),
opacity = .6
) %>%
layout(title = tit,
scene = list(
xaxis = x,
yaxis = y,
zaxis = z
))
(p <-
plot_ly() %>%
add_markers(
x = ~ dis_df$temp,
y = dis_df$wet_dur,
z = dis_df$dis_prop/100,
symbol = 'triangle',
marker = list(
color = ~ dis_df$dis_prop/100,
size = 5,
line = list(color = "black",
width = 1)
)
) %>%
add_surface(
x = ~ x.seq,
y = ~ y.seq,
z = t(fit/100),
opacity = .6
) %>%
layout(title = tit,
scene = list(
xaxis = x,
yaxis = y,
zaxis = z
)))
fit
x.seq
fit
y.seq
fit
dis_df$wet_dur
dis_df$temp
x.seq
y.seq
fit
fit[ ,1:2] <- 0
fit[ ,1:2]
library(plotly)
conflict_prefer("layout", "plotly")
f1 <- list(
family = "Arial, sans-serif",
size = 16,
color = "grey"
)
f2 <- list(
family = "Old Standard TT, serif",
size = 12,
color = "black"
)
tit<- list(
title = "Infection Function",
titlefont = f1,
tickfont = f2
)
x <- list(
title = "Temperature (˚C)",
titlefont = f1,
showticklabels = TRUE,
tickangle = 30,
tickfont = f2,
exponentformat = "E",
nticks= 8,
range= c(min(x.seq), max(x.seq))%>% rev(),
backgroundcolor="white",
gridcolor="black",
showbackground=TRUE,
zerolinecolor="black"
)
y <- list(
title = "Wetness Duration (h)",
titlefont = f1,
showticklabels = TRUE,
tickangle = -45,
tickfont = f2,
exponentformat = "E",
nticks = 8,
range= c(min(y.seq), max(y.seq))%>% rev(),
backgroundcolor="white",
gridcolor="black",
showbackground=TRUE,
zerolinecolor="black"
)
z <- list(
title = "Infection risk (%)",
titlefont = f1,
showticklabels = TRUE,
tickvals =seq(0.1,1, .1),
ticktext = paste(seq(10,100, 10)),
tickangle = 0,
tickfont = f2,
range = c(0,1),
# exponentf
zerolinecolor="black"
)
(p <-
plot_ly() %>%
add_markers(
x = ~ dis_df$temp,
y = dis_df$wet_dur,
z = dis_df$dis_prop/100,
symbol = 'triangle',
marker = list(
color = ~ dis_df$dis_prop/100,
size = 5,
line = list(color = "black",
width = 1)
)
) %>%
add_surface(
x = ~ x.seq,
y = ~ y.seq,
z = t(fit/100),
opacity = .6
) %>%
layout(title = tit,
scene = list(
xaxis = x,
yaxis = y,
zaxis = z
)))
dis_df <-
bind_rows(
dis_df,
dis_df[dis_df$temp == 2, ]%>%
mutate( temp =32)
)
deg <- 2
fit_noint <- glmmTMB(dis_prop2 ~ poly(temp,2) + (wet_dur + I(log(wet_dur+1))),
family = beta_family,
data = dis_df)
fit_int   <- glmmTMB(dis_prop2 ~ poly(temp,3) * (wet_dur + I(log(wet_dur+1))),
family = beta_family,
data = dis_df)
anova( fit_noint, fit_int)
df_fit
install.packages(c("insight", "performance"), repos = 'https://easystats.r-universe.dev')
performance::r2(fit_int)
performance::r2(fit_noint)
performance::r2(fit_int)
lapply(c("insight", "performance"), require, character.only = TRUE)
performance::r2(fit_noint)
performance::r2(fit_int)
