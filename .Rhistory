filter(doy<200) %>%
ggplot() +
geom_line(aes(datetime , value, color = mng) )+
scale_y_continuous(limits = c(0, 100))+
geom_point(aes(  spore_start, .04, fill = spore_start_mng),
shape = 25, size  = 2, guide_legend = FALSE)+
ylab(expression(paste("Sporulation initiated \n (probability in %)")))+
scale_color_discrete(name ="Management level:" )+
scale_fill_discrete(name ="Management level:" )+
theme_bw()+
theme(axis.title.x = element_blank(),
legend.position = "bottom",
text = element_text(size = text_size)
)+
theme(panel.grid.major.y = element_line(color = "black",
size = 0.5,
linetype = 2),
axis.title.y = element_text(vjust=-1.9)
)
)
plotf <- egg::ggarrange(plots = list(p1, p2))
ggsave(plot = plotf,
filename = here("scr/model/visualisation.png"),
width = 11,
height = 7,
dpi = 600)
shell.exec(here("scr/model"))
(p2 <-
wth %>%
filter(doy<200) %>%
ggplot() +
geom_line(aes(datetime , value, color = mng) )+
scale_y_continuous(limits = c(0, 100))+
geom_point(aes(  spore_start, .04, fill = spore_start_mng),
shape = 25, size  = 2, guide_legend = FALSE)+
ylab(expression(paste("Sporulation initiated \n (probability in %)")))+
scale_color_discrete(name ="Management level:" )+
scale_fill_discrete(name ="Management level:" )+
theme_bw()+
theme(axis.title.x = element_blank(),
legend.position = "bottom",
text = element_text(size = text_size)
)+
theme(panel.grid.major.y = element_line(color = "black",
size = 0.5,
linetype = 2),
axis.title.y = element_text(vjust=-2.1)
)
)
plotf <- egg::ggarrange(plots = list(p1, p2))
ggsave(plot = plotf,
filename = here("scr/model/visualisation.png"),
width = 11,
height = 7,
dpi = 600)
##################################################
# Model implementation
# 1. Sporulation conditions initiation
################################################
# Sample weather data
# Sample weather data
(wth <- wthls[[3]])
# Probabilities for sporulation onset
load(here("scr/model/cu_probs.RData"))
tb
cu <- ifelse(wth$temp > 0 & wth$temp < 7.2, 1, 0)
wth$cusum <- cumsum(cu)
wth$prob_high <- pnorm(wth$cusum,
tb[tb$mng == "high", "means"] %>% pull,
tb[tb$mng == "high", "sdev"] %>% pull)
wth$prob_low <- pnorm(wth$cusum,
tb[tb$mng == "low", "means"] %>% pull,
tb[tb$mng == "low", "sdev"] %>% pull)
start.prob <- .01
wth$start_high <-wth[which.min(abs(wth$prob_high - start.prob)), "datetime" ]%>% pull()
wth$start_low <-wth[which.min(abs(wth$prob_low - start.prob)),"datetime" ]%>% pull()
wth[3000:3200, ] %>%
mutate(dte = as.Date(datetime)) %>%
select(dte, cusum, prob_high, prob_low) %>%
group_by(dte) %>%
summarise_all(mean)
# load the model
load( here("scr/model/inf_model.RData"))
# Set min thresholds to enable model runs
rh_thresh <- 90
temp_thresh <- 2
rain_thresh <- .2
# Extract variables as vectors for speed
wth[["rain"]] -> rain
if ("rhum" %in% names(wth))  wth[["rhum"]] -> rh
if ("rh" %in% names(wth))  wth[["rh"]] -> rh
wth[["temp"]] -> temp
# This function to infill missing values to let the model run
infill_gap <- 12
if (sum(is.na(with(wth, rain, temp, rhum))) > 0) {
temp <-
round(zoo::na.spline(temp, na.rm = FALSE, maxgap = infill_gap), 1)
rh <-
round(zoo::na.spline(rh, na.rm = FALSE, maxgap = infill_gap), 0)
rh  <- sapply(rh, function(x) ifelse(x > 100, x <- 100, x))
# Rain is infilled based on min rh wethens threshold to let the model run
rain <- ifelse(rh>=rh_thresh, .2 )
}
if (sum(is.na(with(wth, rain, temp, rhum))) > 0) {
stop(print("The sum of NAs is more than 7! Check your weather data."))
}
# conditions for sporulation
wet_dur <- ifelse(rh >= rh_thresh | rain> rain_thresh, 1,0)
criteria <- as.numeric(temp >= temp_thresh & wet_dur == 1)
# criteria  <- c(0,1,0,1,0,0,1,1,0,0,0,1,1,0,0,0)
#The accumulation breaks if the conditions aren't met for more than infstop hours
infstop <- 2 + 1
criteria <- c(criteria, rep(0, infstop))
for (k in c(1:c(length(criteria)-infstop))){
# k = 2
if(criteria[k] == 1& criteria[k + infstop] == 1 ) criteria[k : c(k + infstop)] <- 1
}
criteria <-  criteria[1:c(length(criteria)-infstop)]
# cumulative sum of hours that meet the criteria for sporulation with restart at zero
(criteria_sum <-
stats::ave(criteria, cumsum(criteria == 0), FUN = cumsum)
)
dff <- data.frame(temp = temp, wet_dur=criteria_sum)
dff$inf <- plogis(predict(mod, newdata=dff))
dff$inf <-ifelse(dff$wet_dur == 0,0, dff$inf)
dff$inf <-ifelse(dff$temp <= 0,0, dff$inf)
wth$inf <- dff$inf
wth <-
mutate(wth,doy = yday(datetime)) %>%
filter(doy <200) %>%
pivot_longer(cols = c(prob_low, prob_high),
names_to = "mng" ) %>%
mutate(mng=ifelse(mng == "prob_low", "Low", "High"),
inf = inf * 100) %>%
pivot_longer(cols = c(start_low, start_high),
values_to = "spore_start",
names_to = "spore_start_mng" )  %>%
mutate(spore_start_mng=ifelse(spore_start_mng == "start_low", "Low", "High")) %>%
mutate(value = 100 *value)
#Parameteres
safe_max <- .2
med_max <- .35
text_size <- 13
format.mmdd <- function(x, format = "%b-%d", ...) format(as.Date(x), format = format, ...)
(p1 <-
wth %>%
mutate(inf = ifelse(inf == 0 ,NA, inf)) %>%
group_by(mng) %>%
mutate(inf = ifelse(datetime <spore_start ,NA, inf)) %>%
mutate( start_lab  = substring(as.character(as.Date(spore_start )), 6),
# start_lab =   paste(month.abb[as.numeric(strsplit( start_lab, "-")[[1]][[1]])],
#                     strsplit( start_lab, "-")[[1]][[2]], sep = "-")
) %>%
mutate(col_inf = ifelse(inf < .2, "green",
ifelse(inf >=.2& inf<med_max, "orange",
ifelse(inf >= .35, "red", "gray")))) %>%
filter(doy<200) %>%
ggplot(aes(datetime, inf))+
# geom_tile(aes(x=datetime,y=50,fill=cut(inf,3)),height=100,alpha=0.2) +
# geom_tile(aes(x=datetime,y=50,fill=col_inf, group = 1),height=100,alpha=0.4)+
geom_rect(aes(xmin=spore_start, xmax=max(datetime), ymin=0, ymax=safe_max*100),
fill="#99c140") +
geom_rect(aes(xmin=spore_start, xmax=max(datetime), ymin=safe_max*100, ymax=med_max*100),
fill="#e7b416") +
geom_rect(aes(xmin=spore_start, xmax=max(datetime), ymin=med_max*100, ymax=100),
fill="#cc3232") +
# scale_fill_manual(values = c("#99c140",   "#e7b416", "#cc3232"))+
geom_line(aes(datetime, inf))+
scale_y_continuous(limits = c(0,100))+
geom_point(aes(spore_start, .04, color = spore_start_mng, group  =2), shape = 25, size  = 2)+
geom_text(aes(label = start_lab , x = spore_start,
y = ifelse(spore_start_mng == "Low", 10,30) ),
check_overlap = TRUE,angle = 90, size = 4.5)+
ylab("Infection Risk(%)")+
theme_bw()+
theme(axis.title.x = element_blank(),
legend.position = "none",
text = element_text(size = text_size)
)
)
list.of.packages <-
c(
"dplyr",
"ggplot2",
"readr",
"forcats",
"tidyr",
"lubridate",
"here",
"stringr",
"conflicted",
"lubridate",
"ggpubr",
"scales",
"survival",
"hnp"
)
new.packages <-
list.of.packages[!(list.of.packages %in% installed.packages()[, "Package"])]
#Download packages that are not already present in the library
if (length(new.packages))
install.packages(new.packages)
if (length(new.packages))
install.packages(new.packages, repos = c(CRAN="https://cran.r-project.org/"))
packages_load <-
lapply(list.of.packages, require, character.only = TRUE)
#Print warning if there is a problem with installing/loading some of packages
if (any(as.numeric(packages_load) == 0)) {
warning(paste("Package/s", paste(list.of.packages[packages_load != TRUE]), "not loaded!"))
} else {
print("All packages were successfully loaded.")
}
conflict_prefer("here", "here")
conflict_prefer("map", "purrr")
conflict_prefer("select", "dplyr")
conflict_prefer("yday", "lubridate")
conflict_prefer("leap_year", "lubridate")
conflict_prefer("year", "lubridate")
conflict_prefer("filter", "dplyr")
conflict_prefer("yday", "lubridate")
conflict_prefer("month", "lubridate")
rm(packages_load, list.of.packages, new.packages)
# Chill unit calculations
load(file = here("dat/ana/chill.RData"))
dta <-
bind_rows(ch_ls) %>%
separate(id, into = c("loc", "yr"), remove = FALSE) %>%
mutate(
mng = ifelse(loc == "Whatcom", "low",
ifelse(loc == "Skagit"& yr <= 2017, "low", "high"))
)
spor_dur <-
dta %>%
group_by(id) %>%
filter(chill_start == "11-15") %>%
select(id, cu_, mng,spor_dur) %>% distinct()
#Bio data: dis_long
load(file = here::here("dat", "raw", "final", "dis_long.RData"))
dtasum <-
dis_long %>%
group_by(id) %>%
filter(stage == "sporulation") %>%
mutate(times = yday(date) - min(yday(date))) %>%
mutate(spor = sum(diff(times)*zoo::rollmean(prop,2))) %>%
select(id,  spor) %>%
distinct() %>%
bind_rows(., tibble(id = "Skagit_2019", spor = 0))# There were no readings for sporulation for skagit  for that year
# Find the date of the first observed fully developed apothecia
dtasum <-
dis_long %>%
group_by(id) %>%
filter(counts>0) %>%
filter(stage == "sporulation") %>%
mutate(spor_start = min(yday(date))) %>%
select(id, spor_start) %>%
distinct() %>%
left_join(dtasum,.,by = "id") %>%
replace_na(list(spor_start =0))# years without sporulation will be returned as NA after joining
dtasum <-
left_join(spor_dur,dtasum,by = "id" ) %>%
separate(id, into = c( "Site","Season")) %>%
rename(Management = mng)
dtasum <-
dtasum %>%
mutate_if(is.character, factor) %>%
mutate(Management = fct_rev(Management))
dtasum %>%
filter(spor_start > 0) %>%
select(spor_start, cu_, Management) %>%
distinct()
## Start of sporulation
## Gamma GLM
l.start <-
dtasum %>%
filter(spor_start > 0) %>%
lm(spor_start ~ Management + Season + Site, data = .)
anova(l.start)
m.start <-
dtasum %>%
filter(spor_start > 0) %>%
coxph(Surv(spor_start, event = rep(1, nrow(.) )) ~
Management + Season + Site,
data= .
)
anova(m.start)
list.of.packages <-
c(
"dplyr",
"ggplot2",
"readr",
"lubridate",
"data.table",
"GGally",
"here",
"reshape2",
"stringr",
"conflicted",
"lubridate",
"naniar",
"tibble",
"tidyr",
"forcats",
"ggpubr",
"survival"
)
new.packages <-
list.of.packages[!(list.of.packages %in% installed.packages()[, "Package"])]
#Download packages that are not already present in the library
if (length(new.packages))
install.packages(new.packages)
if (length(new.packages))
install.packages(new.packages, repos = c(CRAN="https://cran.r-project.org/"))
packages_load <-
lapply(list.of.packages, require, character.only = TRUE)
#Print warning if there is a problem with installing/loading some of packages
if (any(as.numeric(packages_load) == 0)) {
warning(paste("Package/s", paste(list.of.packages[packages_load != TRUE]), "not loaded!"))
} else {
print("All packages were successfully loaded.")
}
conflict_prefer("here", "here")
conflict_prefer("map", "purrr")
conflict_prefer("select", "dplyr")
conflict_prefer("yday", "lubridate")
conflict_prefer("leap_year", "lubridate")
conflict_prefer("year", "lubridate")
conflict_prefer("filter", "dplyr")
conflict_prefer("yday", "lubridate")
conflict_prefer("month", "lubridate")
rm(packages_load, list.of.packages, new.packages)
#######################################################################
# Chilling units
#######################################################################
# Chill unit calculations
load(file = here("dat/ana/chill.RData"))
#Bio data: dis_long
load(file = here::here("dat", "raw", "final", "dis_long.RData"))
# Distance between bio sites and locations
bind_rows(ch_ls) %>%
separate(id, into = c("loc", "yr"), remove = FALSE) %>%
mutate(
mng = ifelse(loc == "Whatcom", "low",
ifelse(loc == "Skagit"& yr <= 2017, "low", "high"))
) %>%
select(loc, stna, dist, yr) %>%
distinct() %>%
arrange(yr, loc)
bind_rows(ch_ls) %>%
separate(id, into = c("loc", "yr"), remove = FALSE) %>%
mutate(
mng = ifelse(loc == "Whatcom", "low",
ifelse(loc == "Skagit"& yr <= 2017, "low", "high"))
) %>%
select(loc, stna, dist, yr) %>%
distinct() %>%
summarise(average_distance = mean(dist),
min_dist = min(dist),
max_dist = max(dist))
dta <-
bind_rows(ch_ls) %>%
filter(sporulated == "yes") %>%
separate(id, into = c("loc", "yr"), remove = FALSE) %>%
mutate(
mng = ifelse(loc == "Whatcom", "low",
ifelse(loc == "Skagit"& yr <= 2017, "low", "high"))
)
# Mean distance between stations
dta %>%
select(loc, stna, dist, yr) %>%
distinct() %>%
summarise(average_distance = mean(dist),
min_dist = min(dist),
max_dist = max(dist))
# pubfig
tit <-
"Relation of chilling units (0 - 7.2 C)  and initial sporulation date"
dta_mod <-
dta %>%
group_by(mng, chill_start) %>%
mutate(cv =  sd(cu_) / mean(cu_) * 100,
cv = round(cv,2),
lab_pos = ifelse(mng == "high", max(cu_)+80, min(cu_)-80)) %>%
ungroup() %>%
group_by(chill_start) %>%
mutate(cv_overall =  sd(cu_) / mean(cu_) * 100,
cv_overall = paste0("Overal CV =\n ",round(cv_overall,2), "(", min(cu_),",", max(cu_),")"),
lab_pos_overall = min(cu_)-200,
mng = stringr::str_to_title(mng) ) %>%
group_by(chill_start, mng) %>%
mutate(cv_group =  sd(cu_) / mean(cu_) * 100,
cv_group = paste0(round(cv_group,2), "(", min(cu_),",", max(cu_),")")
)
dta_mod %>%
ggplot(aes(chill_start,cu_, color = mng, group1 = chill_start, group2= mng))+
geom_jitter(position = position_dodge(.65))+
geom_text(aes(chill_start, lab_pos, label = cv_group, group1 = mng))+
geom_text(aes(chill_start, lab_pos_overall, label = cv_overall), color = "black")+
geom_boxplot( width = .4,position = position_dodge(.65), color = "darkgray")+
geom_jitter(position = position_dodge(.65))+
labs(
x = "Start date of the accumulation period",
y = "Chilling units (0 - 7.2˚C)",
# title = tit,
# subtitle = "Coeficient of variation between accumulations of different methods",
color = "Management"
) +
geom_vline(xintercept=seq(1.5, length(unique(dta_mod$chill_start))-0.5, 1),
lwd=.5, colour="gray")+
theme_bw()+
theme(
legend.position = c(.9,.85),
axis.text.x = element_text(size = 10),
# axis text size
axis.text.y = element_text(vjust = 0.2),
# axis text alignment
axis.ticks = element_line(size = 0.4),
axis.title = element_text(size = 11, face = "bold"),
legend.text = element_text(size = 12),
legend.title = element_text(size = 12)
)
# pubfig
tit <-
"Relation of chilling units (0 - 7.2 C)  and initial sporulation date"
dta_mod <-
dta %>%
group_by(mng, chill_start) %>%
mutate(cv =  sd(cu_) / mean(cu_) * 100,
cv = round(cv,2),
lab_pos = ifelse(mng == "high", max(cu_)+80, min(cu_)-80)) %>%
ungroup() %>%
group_by(chill_start) %>%
mutate(cv_overall =  sd(cu_) / mean(cu_) * 100,
cv_overall = paste0("Overal CV =\n ",round(cv_overall,2), "(", min(cu_),", ", max(cu_),")"),
lab_pos_overall = min(cu_)-200,
mng = stringr::str_to_title(mng) ) %>%
group_by(chill_start, mng) %>%
mutate(cv_group =  sd(cu_) / mean(cu_) * 100,
cv_group = paste0(round(cv_group,2), "(", min(cu_),", ", max(cu_),")")
)
dta_mod %>%
ggplot(aes(chill_start,cu_, color = mng, group1 = chill_start, group2= mng))+
geom_jitter(position = position_dodge(.65))+
geom_text(aes(chill_start, lab_pos, label = cv_group, group1 = mng))+
geom_text(aes(chill_start, lab_pos_overall, label = cv_overall), color = "black")+
geom_boxplot( width = .4,position = position_dodge(.65), color = "darkgray")+
geom_jitter(position = position_dodge(.65))+
labs(
x = "Start date of the accumulation period",
y = "Chilling units (0 - 7.2 ˚C)",
# title = tit,
# subtitle = "Coeficient of variation between accumulations of different methods",
color = "Management"
) +
geom_vline(xintercept=seq(1.5, length(unique(dta_mod$chill_start))-0.5, 1),
lwd=.5, colour="gray")+
theme_bw()+
theme(
legend.position = c(.9,.85),
axis.text.x = element_text(size = 10),
# axis text size
axis.text.y = element_text(vjust = 0.2),
# axis text alignment
axis.ticks = element_line(size = 0.4),
axis.title = element_text(size = 11, face = "bold"),
legend.text = element_text(size = 12),
legend.title = element_text(size = 12)
)
ggsave(
filename = here::here("out", paste0(tit, ".png")),
width = 8,
height = 6.5,
dpi = 300
)
shell.exec(here::here("out", "initial_res", "chill", paste0(tit, ".png")))
shell.exec(here::here("out", paste0(tit, ".png")))
dta_mod %>%
ggplot(aes(chill_start,cu_, color = mng, group1 = chill_start, group2= mng))+
geom_jitter(position = position_dodge(.65))+
geom_text(aes(chill_start, lab_pos, label = cv_group, group1 = mng))+
geom_text(aes(chill_start, lab_pos_overall, label = cv_overall), color = "black")+
geom_boxplot( width = .4,position = position_dodge(.65), color = "darkgray")+
geom_jitter(position = position_dodge(.65))+
labs(
x = "Start date of the accumulation period",
y = "Chilling units (0 – 7.2 ˚C)",
# title = tit,
# subtitle = "Coeficient of variation between accumulations of different methods",
color = "Management"
) +
geom_vline(xintercept=seq(1.5, length(unique(dta_mod$chill_start))-0.5, 1),
lwd=.5, colour="gray")+
theme_bw()+
theme(
legend.position = c(.9,.85),
axis.text.x = element_text(size = 10),
# axis text size
axis.text.y = element_text(vjust = 0.2),
# axis text alignment
axis.ticks = element_line(size = 0.4),
axis.title = element_text(size = 11, face = "bold"),
legend.text = element_text(size = 12),
legend.title = element_text(size = 12)
)
ggsave(
filename = here::here("out", paste0(tit, ".png")),
width = 8,
height = 6.5,
dpi = 300
)
citation("here")
citation("Readxl")
citation("readxl")
