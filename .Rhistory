zerolinecolor="black"
)
y <- list(
title = "Wetness Duration (h)",
titlefont = f1,
showticklabels = TRUE,
tickangle = -45,
tickfont = f2,
exponentformat = "E",
nticks = 8,
range= c(min(y.seq), max(y.seq))%>% rev(),
backgroundcolor="white",
gridcolor="black",
showbackground=TRUE,
zerolinecolor="black"
)
z <- list(
title = "Infection risk (%)",
titlefont = f1,
showticklabels = TRUE,
tickangle = 0,
tickfont = f2,
exponentformat = "E",
nticks= 10,
range= c(0, 100),
backgroundcolor="white",
gridcolor="black",
showbackground=TRUE,
zerolinecolor="black"
)
##Custom ticks
axx <- list(
ticketmode = 'array',
ticktext = c("Huey", "Dewey", "Louie"),
tickvals = c(0,25,50),
range = c(-25,75)
)
# p <-
plot_ly() %>%
add_markers(
x = ~ dis_df$temp,
y = dis_df$wet_dur,
z = dis_df$dis_prop,
symbol = 'triangle',
marker = list(
color = ~ dis_df$dis_prop,
size = 5,
line = list(color = "black",
width = 1)
)
) %>%
add_surface(
x = ~ x.seq,
y = ~ y.seq,
z = t(fit),
opacity = .7
) %>%
layout(title = tit,
scene = list(
xaxis = x,
yaxis = y,
zaxis = z
))
plotly_IMAGE(p, width = 750, height = 850, format = "png", scale = 2,
out_file = here("scr/model/fig/surface_inf.png"))
shell.exec(here("scr/model/fig/surface_inf.png"))
# p <-
plot_ly( width = 500, height = 500) %>%
add_markers(
x = ~ dis_df$temp,
y = dis_df$wet_dur,
z = dis_df$dis_prop,
symbol = 'triangle',
marker = list(
color = ~ dis_df$dis_prop,
size = 5,
line = list(color = "black",
width = 1)
)
) %>%
add_surface(
x = ~ x.seq,
y = ~ y.seq,
z = t(fit),
opacity = .7
) %>%
layout(title = tit,
scene = list(
xaxis = x,
yaxis = y,
zaxis = z
))
# p <-
plot_ly( autosize = F) %>%
add_markers(
x = ~ dis_df$temp,
y = dis_df$wet_dur,
z = dis_df$dis_prop,
symbol = 'triangle',
marker = list(
color = ~ dis_df$dis_prop,
size = 5,
line = list(color = "black",
width = 1)
)
) %>%
add_surface(
x = ~ x.seq,
y = ~ y.seq,
z = t(fit),
opacity = .7
) %>%
layout(title = tit,
scene = list(
xaxis = x,
yaxis = y,
zaxis = z
))
plotly_IMAGE(p, width = 750, height = 1050, format = "png", scale = 2,
out_file = here("scr/model/fig/surface_inf.png"))
p <-
plot_ly( ) %>%
add_markers(
x = ~ dis_df$temp,
y = dis_df$wet_dur,
z = dis_df$dis_prop,
symbol = 'triangle',
marker = list(
color = ~ dis_df$dis_prop,
size = 5,
line = list(color = "black",
width = 1)
)
) %>%
add_surface(
x = ~ x.seq,
y = ~ y.seq,
z = t(fit),
opacity = .7
) %>%
layout(title = tit,
scene = list(
xaxis = x,
yaxis = y,
zaxis = z
))
plotly_IMAGE(p, width = 750, height = 1050, format = "png", scale = 2,
out_file = here("scr/model/fig/surface_inf.png"))
shell.exec(here("scr/model/fig/surface_inf.png"))
fit
fit
str(fit)
as.data.frame(fi)
as.data.frame(fit)
as.data.frame(fit) %>% view
plotly_IMAGE(p, width = 750, height = 550, format = "png", scale = 2,
out_file = here("scr/model/fig/surface_inf.png"))
shell.exec(here("scr/model/fig/surface_inf.png"))
dis_df <-
bind_rows(
dis_df,
dis_df[dis_df$temp == 2, ]%>%
mutate( temp =28)
)
deg <- 2
fit_noint <- glmmTMB(dis_prop2 ~ poly(temp,2) + (wet_dur + I(log(wet_dur+1))),
family = beta_family,
data = dis_df)
fit_int   <- glmmTMB(dis_prop2 ~ poly(temp,3) * (wet_dur + I(log(wet_dur+1))),
family = beta_family,
data = dis_df)
anova( fit_noint, fit_int)
summary(fit_noint)
summary(fit_int)
glmmTMB:::Anova.glmmTMB(fit_noint)
glmmTMB:::Anova.glmmTMB(fit_int)
fit <- fit_int
df_fit <- cbind(dis_df,fit =plogis(predict(fit,dis_df))*100)
anova( fit_noint, fit_int)
summary(fit_noint)
summary(fit_int)
glmmTMB:::Anova.glmmTMB(fit_noint)
glmmTMB:::Anova.glmmTMB(fit_int)
fit <- fit_int
df_fit <- cbind(dis_df,fit =plogis(predict(fit,dis_df))*100)
df_fit
str(fit)
conf_int <- predict(fit, se.fit = TRUE)
upr <- plogis(conf_int$fit + 1.96 * conf_int$se.fit)*100
lwr <- plogis(conf_int$fit - 1.96 * conf_int$se.fit)*100
ggplot(data = df_fit,aes(x= wet_dur, y = dis_prop, colour = "Observed"))+
geom_point()+
geom_line()+
geom_line(aes(wet_dur, fit, colour = "Predicted")) +
geom_ribbon(aes(ymin=lwr,ymax=upr), alpha=0.3)+
scale_color_manual(values = c(
Observed = "black",
Predicted = "red")) +
facet_grid(~temp)
ggplot(data = df_fit,aes(x= temp, y = dis_prop, colour = "Observed"))+
geom_point()+
geom_line()+
geom_line(aes(temp, fit, colour = "Predicted")) +
geom_ribbon(aes(ymin=lwr,ymax=upr), alpha=0.3)+
scale_color_manual(values = c( Observed = "black", Predicted = "red"))+
facet_grid(~wet_dur, scales = "free")
mod <- fit
save(mod, file = here("scr/model/inf_model.RData"))
x.seq <- seq(min(dis_df$temp, na.rm=TRUE), max(dis_df$temp, na.rm=TRUE), by = .1)
y.seq <- seq(min(dis_df$wet_dur, na.rm=TRUE), max(dis_df$wet_dur, na.rm=TRUE), by = 1)
predfun <- function(x,y){
newdat <- data.frame(temp = x, wet_dur=y)
plogis(predict(mod, newdata=newdat))*100
}
fit <- outer(x.seq, y.seq, Vectorize(predfun))
library(plotly)
conflict_prefer("layout", "plotly")
f1 <- list(
family = "Arial, sans-serif",
size = 16,
color = "grey"
)
f2 <- list(
family = "Old Standard TT, serif",
size = 12,
color = "black"
)
tit<- list(
title = "Infection Function",
titlefont = f1,
tickfont = f2
)
x <- list(
title = "Temperature (˚C)",
titlefont = f1,
showticklabels = TRUE,
tickangle = 30,
tickfont = f2,
exponentformat = "E",
nticks= 8,
range= c(min(x.seq), max(x.seq))%>% rev(),
backgroundcolor="white",
gridcolor="black",
showbackground=TRUE,
zerolinecolor="black"
)
y <- list(
title = "Wetness Duration (h)",
titlefont = f1,
showticklabels = TRUE,
tickangle = -45,
tickfont = f2,
exponentformat = "E",
nticks = 8,
range= c(min(y.seq), max(y.seq))%>% rev(),
backgroundcolor="white",
gridcolor="black",
showbackground=TRUE,
zerolinecolor="black"
)
z <- list(
title = "Infection risk (%)",
titlefont = f1,
showticklabels = TRUE,
tickangle = 0,
tickfont = f2,
exponentformat = "E",
nticks= 10,
range= c(0, 100),
backgroundcolor="white",
gridcolor="black",
showbackground=TRUE,
zerolinecolor="black"
)
list.of.packages <-
c(
"dplyr",
"ggplot2",
"readr",
"lubridate",
"data.table",
"GGally",
"here",
"reshape2",
"stringr",
"conflicted",
"lubridate",
"naniar",
"tibble",
"tidyr",
"pbapply",
"parallel",
"zoo"
)
# p <-
plot_ly( ) %>%
add_markers(
x = ~ dis_df$temp,
y = dis_df$wet_dur,
z = dis_df$dis_prop,
symbol = 'triangle',
marker = list(
color = ~ dis_df$dis_prop,
size = 5,
line = list(color = "black",
width = 1)
)
) %>%
add_surface(
x = ~ x.seq,
y = ~ y.seq,
z = t(fit),
opacity = .7
) %>%
layout(title = tit,
scene = list(
xaxis = x,
yaxis = y,
zaxis = z
))
summary(fit_noint)
summary(fit_int)
dis_df <-
bind_rows(
dis_df,
dis_df[dis_df$temp == 2, ]%>%
mutate( temp =32)
)
deg <- 2
fit_noint <- glmmTMB(dis_prop2 ~ poly(temp,2) + (wet_dur + I(log(wet_dur+1))),
family = beta_family,
data = dis_df)
fit_int   <- glmmTMB(dis_prop2 ~ poly(temp,3) * (wet_dur + I(log(wet_dur+1))),
family = beta_family,
data = dis_df)
anova( fit_noint, fit_int)
summary(fit_noint)
summary(fit_int)
glmmTMB:::Anova.glmmTMB(fit_noint)
glmmTMB:::Anova.glmmTMB(fit_int)
fit <- fit_int
df_fit <- cbind(dis_df,fit =plogis(predict(fit,dis_df))*100)
df_fit
str(fit)
conf_int <- predict(fit, se.fit = TRUE)
upr <- plogis(conf_int$fit + 1.96 * conf_int$se.fit)*100
lwr <- plogis(conf_int$fit - 1.96 * conf_int$se.fit)*100
ggplot(data = df_fit,aes(x= wet_dur, y = dis_prop, colour = "Observed"))+
geom_point()+
geom_line()+
geom_line(aes(wet_dur, fit, colour = "Predicted")) +
geom_ribbon(aes(ymin=lwr,ymax=upr), alpha=0.3)+
scale_color_manual(values = c(
Observed = "black",
Predicted = "red")) +
facet_grid(~temp)
ggplot(data = df_fit,aes(x= temp, y = dis_prop, colour = "Observed"))+
geom_point()+
geom_line()+
geom_line(aes(temp, fit, colour = "Predicted")) +
geom_ribbon(aes(ymin=lwr,ymax=upr), alpha=0.3)+
scale_color_manual(values = c( Observed = "black", Predicted = "red"))+
facet_grid(~wet_dur, scales = "free")
mod <- fit
save(mod, file = here("scr/model/inf_model.RData"))
x.seq <- seq(min(dis_df$temp, na.rm=TRUE), max(dis_df$temp, na.rm=TRUE), by = .5)
y.seq <- seq(min(dis_df$wet_dur, na.rm=TRUE), max(dis_df$wet_dur, na.rm=TRUE), by = .5)
predfun <- function(x,y){
newdat <- data.frame(temp = x, wet_dur=y)
plogis(predict(mod, newdata=newdat))*100
}
fit <- outer(x.seq, y.seq, Vectorize(predfun))
library(plotly)
conflict_prefer("layout", "plotly")
f1 <- list(
family = "Arial, sans-serif",
size = 16,
color = "grey"
)
f2 <- list(
family = "Old Standard TT, serif",
size = 12,
color = "black"
)
tit<- list(
title = "Infection Function",
titlefont = f1,
tickfont = f2
)
x <- list(
title = "Temperature (˚C)",
titlefont = f1,
showticklabels = TRUE,
tickangle = 30,
tickfont = f2,
exponentformat = "E",
nticks= 8,
range= c(min(x.seq), max(x.seq))%>% rev(),
backgroundcolor="white",
gridcolor="black",
showbackground=TRUE,
zerolinecolor="black"
)
y <- list(
title = "Wetness Duration (h)",
titlefont = f1,
showticklabels = TRUE,
tickangle = -45,
tickfont = f2,
exponentformat = "E",
nticks = 8,
range= c(min(y.seq), max(y.seq))%>% rev(),
backgroundcolor="white",
gridcolor="black",
showbackground=TRUE,
zerolinecolor="black"
)
z <- list(
title = "Infection risk (%)",
titlefont = f1,
showticklabels = TRUE,
tickangle = 0,
tickfont = f2,
exponentformat = "E",
nticks= 10,
range= c(0, 100),
backgroundcolor="white",
gridcolor="black",
showbackground=TRUE,
zerolinecolor="black"
)
##Custom ticks
axx <- list(
ticketmode = 'array',
ticktext = c("Huey", "Dewey", "Louie"),
tickvals = c(0,25,50),
range = c(-25,75)
)
# p <-
plot_ly( ) %>%
add_markers(
x = ~ dis_df$temp,
y = dis_df$wet_dur,
z = dis_df$dis_prop,
symbol = 'triangle',
marker = list(
color = ~ dis_df$dis_prop,
size = 5,
line = list(color = "black",
width = 1)
)
) %>%
add_surface(
x = ~ x.seq,
y = ~ y.seq,
z = t(fit),
opacity = .7
) %>%
layout(title = tit,
scene = list(
xaxis = x,
yaxis = y,
zaxis = z
))
z <- list(
title = "Infection risk (%)",
titlefont = f1,
showticklabels = TRUE,
tickangle = 0,
tickfont = f2,
exponentformat = "E",
nticks= 10,
range= c(0, 100),
ticktext = paste(seq(0,10, 10)),
backgroundcolor="white",
gridcolor="black",
showbackground=TRUE,
zerolinecolor="black"
)
##Custom ticks
axx <- list(
ticketmode = 'array',
ticktext = c("Huey", "Dewey", "Louie"),
tickvals = c(0,25,50),
range = c(-25,75)
)
# p <-
plot_ly( ) %>%
add_markers(
x = ~ dis_df$temp,
y = dis_df$wet_dur,
z = dis_df$dis_prop,
symbol = 'triangle',
marker = list(
color = ~ dis_df$dis_prop,
size = 5,
line = list(color = "black",
width = 1)
)
) %>%
add_surface(
x = ~ x.seq,
y = ~ y.seq,
z = t(fit),
opacity = .7
) %>%
layout(title = tit,
scene = list(
xaxis = x,
yaxis = y,
zaxis = z
))
